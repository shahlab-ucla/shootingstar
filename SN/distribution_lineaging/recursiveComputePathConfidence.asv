function esequence=recursiveComputePathConfidence(esequence,t,i,con)
if(isfield(esequence{t},'linkconfidences'))
newcon=con*esequence{t}.linkconfidences(i);
esequence{t}.path_confidence(i)=newcon;
if(esequence{t}.suc(i,1)~=-1)
    esequence=recursiveComputePathConfidence(...
        esequence,esequence{t}.suc_time(i,1),esequence{t}.suc(i,1),newcon);
    if(esequence{t}.suc(i,2)~=-1)
            esequence=recursiveComputePathConfidence(...
        esequence,esequence{t}.suc_time(i,2),esequence{t}.suc(i,2),newcon);
    end
end
end

%{

%initialize
startt=20;
for i=1:size(esequence_con{startt}.finalpoints,1)
esequence_con=recursiveComputePathConfidence(esequence_con,startt,i,1);
end

figure
hold on
for t=startt:trackingparameters.endtime-1
    scatter(esequence_con{t}.path_confidence,t*ones(size(esequence_con{t}.path_confidence)));
end


figure
hold on
for t=1:trackingparameters.endtime-1
    good=esequence_con{t}.linkconfidences~=0;
    scatter(esequence_con{t}.linkconfidences(good),t*ones(size(esequence_con{t}.linkconfidences(good))));
end



%}