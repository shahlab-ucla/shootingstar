%{
emb=lin;
cases=allbifurcationinfo(emb).refclassificationvector==0;
cases=allbifurcationinfo(emb).refclassificationvector~=allbifurcationinfo(emb).computedclassificationvector;
info=[];
for i=1:length(cases)
    if(cases(i))
        info=[info;allbifurcationinfo(emb).removed(i,1),...
            esequence{allbifurcationinfo(emb).removed(i,1)}.finalpoints(...
        allbifurcationinfo(emb).removed(i,2),:)];
    end
end
if(ROI)
info(:,2)=info(:,2)+ROIxmin;
info(:,3)=info(:,3)+ROIymin
end  
  info=[info,allbifurcationinfo(emb).refclassificationvector(cases)',allbifurcationinfo(emb).computedclassificationvector(cases)'];

cmats={};
for i=1:length(allbifurcationinfo)
cmats{i}=confusionmat(allbifurcationinfo(i).refclassificationvector,allbifurcationinfo(i).computedclassificationvector);
end
%}
%evaluate error over set of lineages

trackingparameters.trainingmode=true;

nondivthress=[];
%lineages={'ZD_RW10348_HDA-1_20110331_1_s3_emb3'};
%edittimes=[300];

edittimes=[190,200,210,200,190,   180,190,180,190,180];
edittimes=edittimes;
    lineages={'ZD_BV82_APX-1_20110415_1_s2_emb1','ZD_BV82_CUL-1_20110329_1_s1_emb1',...
    'ZD_RW10425_ELT-1V_20110916_1_s1_emb2','ZD_BV82_LIT-1_20110419_1_s1_emb2',...
    'ZD_RW10434_LIT-1_20110419_1_s4_emb1',...
    'ZD_BV82_WT_20110419_3_s2_emb2','ZD_BV82_WT_20110426_1_s1_emb3',...
    'ZD_BV82_WT_20110426_1_s1_emb4', 'ZD_BV82_WT_20110426_1_s2_emb2',...
    'ZD_RW10425_WT_20100412_2_s1_emb1'};
    
%lineages={'ZD_RW10714_WT_20101012_3_s3_emb1','ZD_RW10425_WT_20110428_3_s1_emb1','ZD_BV82_PIE-1_20110315_1_s2_emb1',...
%    'ZD_RW10348_PAL-1_20110318_2_s3_emb1','ZD_RW10348_HDA-1_20110331_1_s3_emb3'};
%edittimes=[170,160,180,165,200];

%edittimes=edittimes-10;%avoid area where cant recover fn at end

basedir='L:\santella\unzipped_lineages\training\'
errors=cell(1,length(lineages));
replacemodel=false;

allexpectedchange={};
evalforced=true;
allbifurcationinfo=[];
for lin=1:1%1:length(lineages)
 endtime=edittimes(lin);
 trackingparameters.endtime=endtime;
 %load([basedir,lineages{lin}(1:end-4),'error_test_fullmatlabresult.mat']);
  load([basedir,lineages{lin},'_fullmatlabresult.mat']);
 embryonumbers = {};
nucleidir=basedir;
embryonumbers_c={[lineages{lin},'_edited\nuclei\']};
%endtime=edittimes(lin)+11;
   outputdirectory=[lineages{lin},'/nuclei/'];
 train_tracking_statistics_function;
 train_confidence_function;

tracking_driver_new_classifier_based_version;
 
%section for storing training info
ncells=[];
for i=1:size(removed,1)
   % ncells=[ncells,length(esequence{removed(i,1)}.FP)];
    ncells=[ncells,mean(esequence{removed(i,1)}.selfdistance)./mean(esequence{removed(i,1)}.finaldiams)];
end

allbifurcationinfo(lin).Divdata=Divdata;
allbifurcationinfo(lin).Tripledata=Tripledata;
allbifurcationinfo(lin).NoDivdata=NoDivdata;
allbifurcationinfo(lin).ncells=ncells;
allbifurcationinfo(lin).removed=removed;
allbifurcationinfo(lin).confidenceData=confidenceData;
allbifurcationinfo(lin).splitFNMatchScore=splitFNMatchScore;
allbifurcationinfo(lin).BifurcationMeasures=BifurcationMeasures;

allbifurcationinfo(lin).computedclassificationvector=computedclassificationvector;
allbifurcationinfo(lin).refclassificationvector= refclassificationvector;
mkdir(outputdirectory);
saveGreedyNucleiFiles(esequence_trimmed,endtime,outputdirectory,anisotropy,ROIxmin,ROIymin);
zipname=[lineages{lin},'/',embryonumber,'_',suffix,'.zip'];
zip(zipname,[outputdirectory,'']);
    
uneddir=outputdirectory;
    eddir=[basedir,lineages{lin},'_edited\nuclei\'];
%    uneddir=[basedir,lineages{i},'\nuclei\'];
    test=evaluate_lineage_error(eddir,uneddir,endtime,anisotropy);
    test{37}=test{10}+test{21}+test{32};
    test{38}=test{12}+test{23}++test{34};
    test{39}=sum(test{37}+test{38});
    test{40}=sum(test{37});
    test{41}=sum(test{38});
    
    errors{lin}=test;
    allexpectedchange{lin}=expected_corrections;
end
return

teste=esequence;
for t=1:endtime
    teste{t}.suc=teste{t}.correct_suc;
    teste{t}.suc_time=teste{t}.correct_suc_time;
    teste{t}.delete=teste{t}.FP;
    
end


    
           